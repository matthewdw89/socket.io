{"ast":null,"code":"import _classCallCheck from \"/Users/matthewwaters/Desktop/socket-git/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewwaters/Desktop/socket-git/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthewwaters/Desktop/socket-git/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthewwaters/Desktop/socket-git/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthewwaters/Desktop/socket-git/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matthewwaters/Desktop/socket-git/client/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport ioClient from 'socket.io-client';\nimport Message from './message';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this));\n    _this.state = {\n      loggedIn: false,\n      name: '',\n      message: '',\n      messageList: []\n    };\n\n    _this.submitName = function (e) {\n      e.preventDefault();\n      !e.target.commentInput ? _this.setState({\n        loggedIn: true\n      }) : _this.socket.emit('sendNewMessage', {\n        author: _this.state.name,\n        message: _this.state.message\n      }, _this.setState({\n        message: ''\n      }));\n    };\n\n    _this.socket = ioClient.connect('http://localhost:8080');\n    _this.form = React.createRef();\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.socket.emit('start');\n      this.socket.on('receiveNewMessage', function (data) {\n        _this2.setState({\n          messageList: data\n        });\n\n        _this2.form.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\"\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket.emit('disconnect');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"chat__box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Chat board\"), React.createElement(\"div\", {\n        className: \"chat__messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.messageList.map(function (each, index) {\n        return React.createElement(Message, {\n          author: each.author,\n          message: each.message,\n          me: _this3.state.name,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }))), React.createElement(\"form\", {\n        onSubmit: this.submitName,\n        ref: this.form,\n        className: \"chat__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, !this.state.loggedIn ? React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        name: \"nameInput\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          _this3.setState({\n            name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Comment\",\n        name: \"commentInput\",\n        value: this.state.message,\n        onChange: function onChange(e) {\n          _this3.setState({\n            message: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport { Chat as default };","map":{"version":3,"sources":["/Users/matthewwaters/Desktop/socket-git/client/src/components/chat.js"],"names":["React","Component","ioClient","Message","Chat","state","loggedIn","name","message","messageList","submitName","e","preventDefault","target","commentInput","setState","socket","emit","author","connect","form","createRef","on","data","current","scrollIntoView","behavior","block","map","each","index","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ioClient from 'socket.io-client';\nimport Message from './message';\n\nexport default class Chat extends Component{\n  constructor(){\n    super()\n    this.socket = ioClient.connect('http://localhost:8080');\n    this.form = React.createRef();\n  }\n\n  state = {\n    loggedIn: false,\n    name: '',\n    message: '',\n    messageList: []\n  }\n\n  componentDidMount(){\n    this.socket.emit('start');\n    this.socket.on('receiveNewMessage', (data) => {\n      this.setState({\n        messageList: data\n      })\n      this.form.current.scrollIntoView({behavior: \"smooth\", block: \"end\"})\n    })\n  }\n\n  submitName = (e) => {\n    e.preventDefault();\n    !e.target.commentInput\n      ? this.setState({\n          loggedIn: true\n        })\n      : this.socket.emit('sendNewMessage', {\n          author: this.state.name,\n          message: this.state.message\n        },this.setState({\n            message: ''\n          })\n        )\n  }\n\n  componentWillUnmount(){\n    this.socket.emit('disconnect');\n  }\n  \n  render() {\n    return(\n      <>\n        <div className=\"chat__box\">\n          <h2>Chat board</h2>\n          <div className=\"chat__messages\">\n            {\n              this.state.messageList.map( (each,index) => {\n                return <Message author={each.author} message={each.message} me={this.state.name} key={index}/>\n              })\n            }\n          </div>\n        </div>\n        <form onSubmit={this.submitName} ref={this.form} className=\"chat__form\">\n          {\n            !this.state.loggedIn\n              ? <input type=\"text\" placeholder=\"Name\" name=\"nameInput\" value={this.state.name} onChange={(e) => {this.setState({name: e.target.value})}}/>\n              : <input type=\"text\" placeholder=\"Comment\" name=\"commentInput\" value={this.state.message} onChange={(e) => {this.setState({message: e.target.value})}}/>\n          }\n\n        </form>\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}